#BlueJ class context
comment0.target=DataComparison
comment0.text=\r\n\ This\ class\ is\ responsible\ for\ comparing\ the\ air\ pollution\ data\ of\ different\ cities.\r\n\r\n\ @author\ Anton\ Davidouski\r\n
comment1.params=
comment1.target=DataComparison()
comment2.params=name\ data
comment2.target=boolean\ addCityData(java.lang.String,\ double[])
comment2.text=\r\n\ Add\ a\ city's\ data\ to\ the\ comparison.\r\n\ @param\ name\ The\ name\ of\ the\ city.\r\n\ @param\ data\ The\ city's\ air\ pollution\ data.\r\n\ @return\ True\ if\ the\ city's\ data\ was\ successfully\ added,\ false\ otherwise.\r\n
comment3.params=name
comment3.target=boolean\ removeCityData(java.lang.String)
comment3.text=\r\n\ Remove\ a\ city's\ data\ from\ the\ comparison.\r\n\ @param\ name\ The\ name\ of\ the\ city.\r\n\ @return\ True\ if\ the\ city's\ data\ was\ successfully\ removed,\ false\ otherwise.\r\n
comment4.params=value\ min\ max
comment4.target=double\ minMaxScale(double,\ double,\ double)
comment4.text=\r\n\ Originally\ intended\ as\ a\ true\ min\ max\ scaling\ method,\ but\ that\ made\ the\ data\ look\ visually\ uninformative,\r\n\ since\ it\ was\ just\ all\ flt\ at\ the\ top\ end\ as\ the\ max\ value\ always\ got\ scaled\ to\ 1.\r\n\ I\ have\ switched\ since\ to\ setting\ min\ to\ always\ be\ 0\ and\ max\ to\ be\ the\ healthy\ value\ for\ each\ pollutant,\ so\ the\ readout\ from\ this\ function\r\n\ will\ show\ the\ user\ how\ much\ the\ pollutant\ level\ exceeds\ the\ healthy\ value\ if\ above\ 1\r\n\ @param\ value\ The\ value\ to\ scale.\r\n\ @param\ min\ The\ minimum\ value\ in\ the\ dataset.\r\n\ @param\ max\ The\ maximum\ value\ in\ the\ dataset.\r\n\ @return\ The\ scaled\ value.\r\n
comment5.params=
comment5.target=javafx.scene.layout.BorderPane\ createChart()
comment5.text=\r\n\ Create\ a\ bar\ chart\ comparing\ the\ air\ pollution\ data\ of\ different\ cities.\r\n\ @return\ A\ border\ pane\ containing\ the\ bar\ chart.\r\n
numComments=6
