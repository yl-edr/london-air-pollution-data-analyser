#BlueJ class context
comment0.target=DataSet
comment0.text=\r\n\ A\ DataSet\ object\ holds\ all\ the\ data\ from\ a\ pollution\ data\ file.\r\n\ \r\n\ It\ is\ assumed\ that\ the\ data\ is\ derived\ from\ a\ DEFRA\ air\ pollution\ file\ (see\r\n\ https\://uk-air.defra.gov.uk/data/pcm-data).\ \r\n\ \r\n\ The\ data\ consists\ of\ a\ few\ bits\ of\ information\ about\ the\ nature\ of\ the\ data,\ and\ a\ list\r\n\ of\ data\ points.\r\n\ \r\n\ @author\ Michael\ K\u00F6lling\r\n\ @version\ 1.0\r\n
comment1.params=pollutant\ year\ metric\ units
comment1.target=DataSet(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ DataSet\r\n
comment10.params=values
comment10.target=void\ addData(java.lang.String[])
comment10.text=\r\n\ Add\ a\ data\ point\ to\ this\ dataset.\ \r\n\ A\ data\ point\ consists\ of\ 4\ pieces\ od\ data\:\r\n\ \r\n\ \ \ \ \ gridcode,\ x,\ y,\ value\r\n\ \ \ \ \ \r\n\ The\ data\ is\ provided\ in\ a\ String\ array\ of\ length\ 4.\ If\ the\ value\ is\ invalid\ or\r\n\ missing,\ it\ will\ be\ stored\ as\ -1.\r\n\r\n\ @param\ \ values\ \ An\ array\ with\ the\ four\ data\ values\ (as\ Strings)\r\n
comment11.params=intString
comment11.target=int\ toInt(java.lang.String)
comment11.text=\r\n\ Convert\ a\ string\ to\ int.\ \r\n\ @param\ intString\ \ The\ String\ holding\ the\ int\ value\r\n\ @return\ \ The\ int\ value,\ or\ -1\ if\ the\ string\ is\ not\ a\ readable\ number\r\n
comment12.params=doubleString
comment12.target=double\ toDouble(java.lang.String)
comment12.text=\r\n\ Convert\ a\ string\ to\ double.\ \r\n\ @param\ doubleString\ \ The\ String\ holding\ the\ double\ value\r\n\ @return\ \ The\ double\ value,\ or\ -1.0\ if\ the\ string\ is\ not\ a\ readable\ number\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\r\n\ Return\ a\ string\ representation\ of\ this\ dataset\ info.\r\n
comment2.params=
comment2.target=java.lang.String\ getPollutant()
comment2.text=\r\n\ Return\ the\ pollutant\ information\ for\ this\ dataset.\r\n
comment3.params=
comment3.target=java.lang.String\ getYear()
comment3.text=\r\n\ Return\ the\ year\ information\ for\ this\ dataset.\r\n
comment4.params=
comment4.target=java.lang.String\ getMetric()
comment4.text=\r\n\ Return\ the\ metric\ information\ for\ this\ dataset.\r\n
comment5.params=
comment5.target=java.lang.String\ getUnits()
comment5.text=\r\n\ Return\ the\ units\ information\ for\ this\ dataset.\r\n
comment6.params=
comment6.target=java.util.List\ getData()
comment6.text=\r\n\ Return\ the\ data\ points\ of\ this\ dataset.\r\n
comment7.params=
comment7.target=double\ getMax()
comment8.params=
comment8.target=double\ getMin()
comment9.params=x\ y
comment9.target=DataPoint\ findNearestDataPoint(int,\ int)
comment9.text=\r\n\ Returns\ the\ nearest\ data\ point\ from\ the\ given\ x\ and\ y\ coordinates.\r\n\ @param\ x\ coordinates\ in\ the\ map\r\n\ @param\ y\ coordinates\ in\ the\ map\r\n\ @return\ The\ nearest\ data\ point\r\n
numComments=14
