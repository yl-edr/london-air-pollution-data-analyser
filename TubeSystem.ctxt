#BlueJ class context
comment0.target=TubeSystem
comment1.params=
comment1.target=TubeSystem()
comment1.text=\r\n\ Constructor\ for\ TubeSystem\ class.\ Initializes\ the\ tube\ lines\ and\ their\ stations.\r\n
comment2.params=start\ finish
comment2.target=java.util.List\ calculateJourney(java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Calculates\ the\ shortest\ journey\ between\ two\ stations.\r\n\ \r\n\ @param\ start\ The\ name\ of\ the\ starting\ station.\r\n\ @param\ finish\ The\ name\ of\ the\ destination\ station.\r\n\ @return\ A\ list\ of\ station\ names\ representing\ the\ shortest\ journey\ (with\ the\ least\ changes)\r\n
comment3.params=station1\ station2
comment3.target=java.util.List\ bothStationsOnLine(java.lang.String,\ java.lang.String)
comment3.text=\r\n\ Finds\ the\ shortest\ journey\ between\ two\ stations\ when\ both\ are\ on\ the\ same\ line.\r\n\ \r\n\ @param\ station1\ The\ name\ of\ the\ starting\ station.\r\n\ @param\ station2\ The\ name\ of\ the\ destination\ station.\r\n\ @return\ A\ list\ of\ station\ names\ representing\ the\ shortest\ journey\r\n
comment4.params=start\ end
comment4.target=java.util.List\ changeLines(java.lang.String,\ java.lang.String)
comment4.text=\r\n\ Finds\ the\ shortest\ journey\ between\ two\ stations\ when\ changing\ Tube\ lines\ is\ necessary.\r\n\ The\ shortest\ journey\ is\ returned\ based\ on\ the\ number\ of\ stations\ traveled.\r\n\ \r\n\ @param\ start\ The\ name\ of\ the\ starting\ station.\r\n\ @param\ end\ The\ name\ of\ the\ destination\ station.\r\n\ @return\ A\ list\ of\ station\ names\ representing\ the\ shortest\ journey\r\n
comment5.params=line1\ line2
comment5.target=java.lang.String\ findHub(TubeLine,\ TubeLine)
comment5.text=\r\n\ Finds\ a\ common\ station\ (hub)\ between\ two\ Tube\ lines.\r\n\ \r\n\ @param\ line1\ The\ first\ Tube\ line.\r\n\ @param\ line2\ The\ second\ Tube\ line.\r\n\ @return\ The\ name\ of\ the\ common\ station\ if\ found,\ otherwise\ returns\ null.\r\n
comment6.params=map
comment6.target=int\ getMinKey(java.util.HashMap)
comment6.text=\r\n\ Finds\ and\ returns\ the\ smallest\ key\ in\ a\ given\ HashMap.\r\n\ \r\n\ @param\ map\ The\ HashMap\ to\ search\ for\ the\ minimum\ key.\r\n\ @return\ The\ smallest\ key\ found,\ or\ 0\ if\ the\ map\ is\ empty.\r\n
numComments=7
